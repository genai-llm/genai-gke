apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  generation: 1
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: nvidia-gpu-device-plugin
    manager: kube-controller-manager
    operation: Update
    subresource: status
  name: nvidia-gpu-device-plugin-medium-cos
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: nvidia-gpu-device-plugin
  template:
    metadata:
      annotations:
        components.gke.io/component-name: gpu-device-plugin
        components.gke.io/component-version: 0.1.24
      creationTimestamp: null
      labels:
        k8s-app: nvidia-gpu-device-plugin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-accelerator
                operator: Exists
              - key: gke-no-default-nvidia-gpu-device-plugin
                operator: NotIn
                values:
                - "true"
              - key: cloud.google.com/gke-cpu-scaling-level
                operator: Lt
                values:
                - "64"
              - key: cloud.google.com/gke-cpu-scaling-level
                operator: Gt
                values:
                - "15"
              - key: cloud.google.com/gke-os-distribution
                operator: In
                values:
                - cos
      containers:
      - command:
        - /usr/bin/nvidia-gpu-device-plugin
        - -logtostderr
        - --enable-container-gpu-metrics
        - --enable-health-monitoring
        env:
        - name: XID_CONFIG
          valueFrom:
            configMapKeyRef:
              key: HealthCriticalXid
              name: xid-config
              optional: true
        - name: LD_LIBRARY_PATH
          value: /usr/local/nvidia/lib64
        - name: GOMAXPROCS
          value: "1"
        image: gcr.io/gke-release/nvidia-gpu-device-plugin@sha256:80eea288f50aa032d193dbb69fe258989fcb3c8f1d5aad8cfaf03b0b8fd53998
        imagePullPolicy: IfNotPresent
        name: nvidia-gpu-device-plugin
        ports:
        - containerPort: 2112
          name: metrics
          protocol: TCP
        resources:
          limits:
            memory: 75Mi
          requests:
            cpu: 50m
            memory: 75Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /device-plugin
          name: device-plugin
        - mountPath: /dev
          name: dev
        - mountPath: /usr/local
          name: kubernetes-bin
        - mountPath: /var/lib/kubelet/pod-resources
          name: pod-resources
        - mountPath: /proc
          name: proc
        - mountPath: /etc/nvidia
          name: nvidia-config
        - mountPath: /opt
          name: opt
        - mountPath: /tmp/nvidia-mps
          name: mps
      dnsPolicy: ClusterFirst
      hostNetwork: true
      hostPID: true
      initContainers:
      - command:
        - bash
        - -c
        - |
          LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
          IFS=,; for label in $LABELS; do
            IFS==; read -r LABEL VALUE <<< "$label"
            if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
              GPU_DRIVER_VERSION=$VALUE
            fi
          done
          if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
            echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
            /cos-gpu-installer install --version=latest
          elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
            echo "default" > /etc/nvidia/gpu_driver_version_config.txt
            /cos-gpu-installer install
          else
            echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
            echo "GPU driver auto installation is disabled."
          fi
          echo "Waiting for GPU driver libraries to be available."
          while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
            sleep 5
          done
          echo "GPU driver is installed."
          echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
          exit 0
        env:
        - name: NVIDIA_INSTALL_DIR_HOST
          value: /home/kubernetes/bin/nvidia
        - name: NVIDIA_INSTALL_DIR_CONTAINER
          value: /usr/local/nvidia
        - name: VULKAN_ICD_DIR_HOST
          value: /home/kubernetes/bin/nvidia/vulkan/icd.d
        - name: VULKAN_ICD_DIR_CONTAINER
          value: /usr/local/nvidia/vulkan/icd.d
        - name: ROOT_MOUNT_DIR
          value: /root
        - name: COS_TOOLS_DIR_HOST
          value: /var/lib/cos-tools
        - name: COS_TOOLS_DIR_CONTAINER
          value: /build/cos-tools
        image: cos-nvidia-installer:fixed
        imagePullPolicy: Never
        name: nvidia-driver-installer
        resources:
          requests:
            cpu: 150m
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/local
          name: kubernetes-bin
        - mountPath: /dev
          name: dev
        - mountPath: /root
          name: root-mount
        - mountPath: /build/cos-tools
          name: cos-tools
        - mountPath: /etc/nvidia
          name: nvidia-config
      - command:
        - bash
        - -c
        - |
          GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
          if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
            exit 0
          else
            /usr/bin/gpu_partitioner -logtostderr
          fi
        env:
        - name: LD_LIBRARY_PATH
          value: /usr/local/nvidia/lib64
        image: gcr.io/gke-release/nvidia-partition-gpu@sha256:e226275da6c45816959fe43cde907ee9a85c6a2aa8a429418a4cadef8ecdb86a
        imagePullPolicy: IfNotPresent
        name: partition-gpus
        resources:
          requests:
            cpu: 150m
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/local
          name: kubernetes-bin
        - mountPath: /dev
          name: dev
        - mountPath: /etc/nvidia
          name: nvidia-config
        - mountPath: /opt
          name: opt
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      - key: components.gke.io/gke-managed-components
        operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/kubelet/device-plugins
          type: Directory
        name: device-plugin
      - hostPath:
          path: /dev
          type: Directory
        name: dev
      - hostPath:
          path: /var/lib/kubelet/pod-resources
          type: Directory
        name: pod-resources
      - hostPath:
          path: /proc
          type: Directory
        name: proc
      - hostPath:
          path: /etc/nvidia
          type: DirectoryOrCreate
        name: nvidia-config
      - hostPath:
          path: /tmp/nvidia-mps
          type: DirectoryOrCreate
        name: mps
      - hostPath:
          path: /home/kubernetes/bin
          type: Directory
        name: kubernetes-bin
      - hostPath:
          path: /
          type: Directory
        name: root-mount
      - hostPath:
          path: /var/lib/cos-tools
          type: DirectoryOrCreate
        name: cos-tools
      - hostPath:
          path: /boot
          type: Directory
        name: boot
      - hostPath:
          path: /opt
          type: Directory
        name: opt
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate

